source [find /target/anlogic/init.cfg]

if {[info exists USB_LOCATION]} {
adapter usb location $USB_LOCATION
}

if {[info exists SPEED]} {
adapter speed $SPEED
} else {
adapter speed    10000
}
adapter driver ftdi

ftdi vid_pid 0x0403 0x6010

transport select jtag

ftdi layout_init 0x0008 0x001b
ftdi layout_signal nSRST -oe 0x0020 -data 0x0020
ftdi layout_signal TCK -data 0x0001
ftdi layout_signal TDI -data 0x0002
ftdi layout_signal TDO -input 0x0004
ftdi layout_signal TMS -data 0x0008
ftdi layout_signal JTAG_SEL -data 0x0100 -oe 0x0100
reset_config srst_only

if { [info exists CHIPNAME] } {
  set _CHIPNAME $CHIPNAME
} else {
  set _CHIPNAME al9000
}

if {$CONFIG_JTAG == 0} {
    jtag newtap $_CHIPNAME rpu -irlen 5 -ircapture 0x1 -irmask 0x03 -expected-id 0x1c900a6d -enable
    jtag newtap $_CHIPNAME apu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id 0x5ba00477 -enable
    jtag newtap $_CHIPNAME pstap -irlen 4 -ircapture 0x1 -irmask 0xf
    jtag newtap $_CHIPNAME fpga -irlen 8 -ircapture 0xC5 -irmask 0xFF
} elseif {$CONFIG_JTAG == 1} {
    if {$CONFIG_TARGET_ARM == 1} {
     jtag newtap $_CHIPNAME apu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id 0x5ba00477 -enable
    }

    if {$CONFIG_TARGET_RV == 1} {
        jtag newtap $_CHIPNAME rpu -irlen 5 -expected-id 0x1c900a6d
    }
}

if {$CONFIG_TARGET_PS == 1 && $CONFIG_JTAG == 0} {
    echo "target ps"
    set _TARGETNAME $_CHIPNAME.pstap
    target create $_TARGETNAME pstap -chain-position $_CHIPNAME.pstap
}


if {$CONFIG_TARGET_ARM == 1} {
    echo "target arm"
    dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.apu
    set _TARGETNAME $_CHIPNAME.a35
    set _CTINAME $_CHIPNAME.cti
    set DBGBASE {0xF9010000 0xF9012000}
    set CTIBASE {0xF9018000 0xF9019000}
    set _cores 2
    for { set _core 0 } { $_core < $_cores } { incr _core } {
        cti create $_CTINAME.$_core -dap $_CHIPNAME.dap -ap-num 1 \
            -baseaddr [lindex $CTIBASE $_core]
        target create $_TARGETNAME.$_core aarch64 \
            -dap $_CHIPNAME.dap -coreid $_core \
            -dbgbase [lindex $DBGBASE $_core] -cti $_CTINAME.$_core

        $_TARGETNAME.$_core configure -event reset-assert-pre "halt"
        $_TARGETNAME.$_core configure -event reset-assert {
            catch "mww 0xf8806330 0x1f0"
            sleep 10
        }
    }
}

if {$CONFIG_TARGET_RV == 1} {
    echo "target rv"
    set _TARGETNAME $_CHIPNAME.rpu
    target create $_TARGETNAME riscv -chain-position $_CHIPNAME.rpu
    riscv expose_csrs 416-496,770-800,835-850,1227-1231,1483-1486,1984-2032,2064-2070,2370-2380,2490-2500,4032-4040
    # We must turn on this because otherwise the IDE version debug cannot download the program into flash
    riscv set_enable_virt2phys off
}

if {$CONFIG_FLASH == 1} {
    if {$CONFIG_TARGET_ARM == 1} {
        set _LOADER $_CHIPNAME.a35.1
    } else {
        set _LOADER $_CHIPNAME.rpu
    }

    echo $_LOADER

    $_LOADER configure -work-area-phys 0x61000000 -work-area-size 0x10000 -work-area-backup 1

    if {$CONFIG_QSPI != 0} {
        set _FLASHNAME $_CHIPNAME.flash
        flash bank $_FLASHNAME.0 dwcssi 0x00000000 0 0 0 $_LOADER 0xf804e000
        if {$CONFIG_QSPI == 2} {
            flash bank $_FLASHNAME.1 dwcssi 0x02000000 0 0 0 $_LOADER 0xf804e000
        }
    }

    if {$CONFIG_NAND == 1} {
        # nand config
        set _NANDNAME $_CHIPNAME.nand
        nand device $_NANDNAME smc35x $_LOADER 0xF841A400
    }

    if {$CONFIG_EMMC == 1} {
        # emmc config
        set _EMMC $_CHIPNAME.emmc
        emmc device $_EMMC dwcmshc $_LOADER 0xF8049000
    }
}


if {$REMOTE_DEBUG == 1} {
bindto 0.0.0.0
}



